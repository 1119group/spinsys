#!/usr/bin/env python3
import getpass
import subprocess
import sys
import yaml


class Dispatcher:

    def __init__(self, joblist):
        with open(joblist) as yamlfile:
            job_dict = yaml.load(yamlfile)

        try:
            self.user = job_dict['user']
        except KeyError:
            self.user = getpass.getuser()

        try:
            self.globaldir = job_dict['globaldir']
        except KeyError:
            self.globaldir = None
        self.nodes = job_dict['nodes']

    def copy_scripts(self, node, source, dest):
        destination = '{0}@{1}:{2}'.format(self.user, node, dest)
        scp = subprocess.Popen(['scp', source, destination],
                               stdout=subprocess.PIPE,
                               stderr=subprocess.PIPE)
        scp.wait()

    def launch_job_to_node(self, node, cmd):
        login = '{0}@{1}'.format(self.user, node)
        ssh = subprocess.Popen(['ssh', '-f', login, 'nohup {}'.format(cmd)],
                               shell=False,
                               stdout=subprocess.PIPE,
                               stderr=subprocess.PIPE)
        return ssh

    @classmethod
    def dispatch(cls):
        for node, attributes in cls.nodes.items():
            cls.copy_scripts(node, attributes['exe'], cls.globaldir)
            cls.launch_job_to_node(node, attributes['exe'])


if __name__ == '__main__':
    joblist = sys.argv[1]
    Dispatcher(joblist).dispatch()
