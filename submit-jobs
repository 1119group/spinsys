#!/usr/bin/env python3
import datetime
import getpass
import os
import stat
import subprocess
import sys
import yaml


class Dispatcher:

    def __init__(self, joblist):
        with open(joblist) as yamlfile:
            job_dict = yaml.load(yamlfile)

        try:
            self.user = job_dict['user']
        except KeyError:
            self.user = getpass.getuser()

        try:
            self.globaldir = job_dict['globaldir']
            if self.globaldir[-1] is not '/':
                self.globaldir += '/'
        except KeyError:
            self.globaldir = None
        self.nodes = job_dict['nodes']
        self.login = None

    def execute_remote_cmd(self, remote_cmd, daemon=False):
        if daemon:
            cmd = ['ssh', '-f', self.login, remote_cmd]
        else:
            cmd = ['ssh', self.login, remote_cmd]
        proc = subprocess.Popen(cmd, shell=False,
                                stdout=subprocess.PIPE,
                                stderr=subprocess.PIPE)
        if not daemon:
            proc.wait()

    def copy_executable(self, node, source, dest):
        destination = '{0}@{1}:{2}'.format(self.user, node, dest)
        self.execute_remote_cmd('mkdir -p {}'.format(dest))
        # Remove old script if it exists on the remote machine
        self.execute_remote_cmd('rm {}'.format(source))
        # Make executables executable
        os.chmod(source, os.stat(source).st_mode | stat.S_IEXEC)
        scp = subprocess.Popen(['scp', source, destination],
                               stdout=subprocess.PIPE,
                               stderr=subprocess.PIPE)
        stdout = scp.stdout.read().decode('utf8')
        stderr = scp.stderr.read().decode('utf8')
        if not stdout:
            print(stdout)
        if not stderr:
            print(stderr)
        scp.wait()

    def launch_job_to_node(self, node, binary):
        log_header = 'Term log ' + datetime.datetime.now().isoformat()
        self.execute_remote_cmd('echo {} > {}.log'.format(log_header, binary))
        self.execute_remote_cmd('nohup {0} >> {0}.log &'.format(binary), daemon=True)

    def dispatch(self):
        for node, attributes in self.nodes.items():
            self.login = '{0}@{1}'.format(self.user, node)
            executable = self.globaldir + attributes['exe']
            self.copy_executable(node, executable, self.globaldir)
            self.launch_job_to_node(node, executable)


if __name__ == '__main__':
    joblist = sys.argv[1]
    dispatcher = Dispatcher(joblist)
    dispatcher.dispatch()
